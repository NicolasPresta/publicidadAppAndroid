package com.example.presta.publicidadexample.dataAccess.model.v1;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.presta.publicidadexample.dataAccess.model.v1.AppConfig;
import com.example.presta.publicidadexample.dataAccess.model.v1.UserData;
import com.example.presta.publicidadexample.dataAccess.model.v1.PhoneData;

import com.example.presta.publicidadexample.dataAccess.model.v1.AppConfigDao;
import com.example.presta.publicidadexample.dataAccess.model.v1.UserDataDao;
import com.example.presta.publicidadexample.dataAccess.model.v1.PhoneDataDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig appConfigDaoConfig;
    private final DaoConfig userDataDaoConfig;
    private final DaoConfig phoneDataDaoConfig;

    private final AppConfigDao appConfigDao;
    private final UserDataDao userDataDao;
    private final PhoneDataDao phoneDataDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        appConfigDaoConfig = daoConfigMap.get(AppConfigDao.class).clone();
        appConfigDaoConfig.initIdentityScope(type);

        userDataDaoConfig = daoConfigMap.get(UserDataDao.class).clone();
        userDataDaoConfig.initIdentityScope(type);

        phoneDataDaoConfig = daoConfigMap.get(PhoneDataDao.class).clone();
        phoneDataDaoConfig.initIdentityScope(type);

        appConfigDao = new AppConfigDao(appConfigDaoConfig, this);
        userDataDao = new UserDataDao(userDataDaoConfig, this);
        phoneDataDao = new PhoneDataDao(phoneDataDaoConfig, this);

        registerDao(AppConfig.class, appConfigDao);
        registerDao(UserData.class, userDataDao);
        registerDao(PhoneData.class, phoneDataDao);
    }
    
    public void clear() {
        appConfigDaoConfig.getIdentityScope().clear();
        userDataDaoConfig.getIdentityScope().clear();
        phoneDataDaoConfig.getIdentityScope().clear();
    }

    public AppConfigDao getAppConfigDao() {
        return appConfigDao;
    }

    public UserDataDao getUserDataDao() {
        return userDataDao;
    }

    public PhoneDataDao getPhoneDataDao() {
        return phoneDataDao;
    }

}
